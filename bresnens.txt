#include <glut.h>
#include <stdio.h>
#include <math.h>

int x1, y1, x2, y2;

void myInit()
{
    glClearColor(1, 1, 1, 1);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, 500, 0, 500);
    glMatrixMode(GL_MODELVIEW);
}

void draw_pixel(int x, int y)
{
    glBegin(GL_POINTS);
    glVertex2f(x, y);
    glEnd();
}

void draw_line(int x1, int y1, int x2, int y2)
{
    int dx = fabs(x2 - x1);
    int dy = fabs(y2 - y1);
    int twody = 2 * dy;
    int twodyminusdx = 2 * (dy - dx);
    int p = 2 * dy - dx;
    int x, y;

    if (x1 < x2)
    {
        x = x1;
        y = y1;
    }
    else
    {
        x = x2;
        y = y2;
        x2 = x1;
        y2 = y1;
    }
    draw_pixel(x, y);

    while (x < x2)
    {
        x++;
        if (p < 0)
            p += twody;
        else
        {
            y++;
            p += twodyminusdx;
        }
        draw_pixel(x, y);
    }
}

void myDisplay()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1, 0, 0);
    draw_line(x1, y1, x2, y2);
    glFlush();
}

int main(int argc, char** argv)
{
    printf("Enter two points (x1, y1) and (x2, y2) separated by spaces: ");
    scanf_s("%d %d %d %d", &x1, &y1, &x2, &y2);

    glutInit(&argc, argv);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("Bresenham's Line Drawing Algorithm");

    myInit();
    glutDisplayFunc(myDisplay);
    glutMainLoop();

    return 0;
}
